module statics/assignment

imports signatures/assignment-sig

rules
programOk : scope * Start 

stmtOk : scope * Entity
stmtsOK maps stmtOk(*,list(*))


 attOk : scope * Attribute
 attsOK maps attOk(*,list(*))

 programOk(s,Statement((Entities))):-
     stmtsOK(s, Entities).

 stmtOk(s, Decl(a,b)):-{T}
  attsOK(s,b).
 
   
  
   
 rules
   typeOfExp : scope * Exp -> TYPE
   typeOfType: scope * Type -> TYPE
  
  
//  typeOfType(s,Tid("int"))=INT(). 
  
//  attOk(s,Exp(e1,e2,e3)) :-{T}
//     typeOfType( e2)==T.
    
     
   
rules 
   

rules 
   typeOfExp(s,Sub(e1,e2))=INT() :-
     typeOfExp(s,e1)==INT(),
     typeOfExp(s,e1)==INT().
rules 
   typeOfExp(s,Add(e1,e2))=T3 :- {T1 T2}
     typeOfExp(s,e1)==T1,
     typeOfExp(s,e1)==T2,
     add(T1,T2)==T3. 
    add: TYPE * TYPE ->TYPE
    add(INT(),STR())=STR().
     add(INT(),INT())=INT().
     add(STR(),INT())=STR(). 
  